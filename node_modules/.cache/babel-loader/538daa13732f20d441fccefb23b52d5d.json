{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\n  totalAmount: 0,\n  items: []\n}; //totalAmount = items;\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      state.items.push({ ...action.payload,\n        amount: 1\n      });\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        console.log(obj.amount * obj.price);\n        return obj.price + sum;\n      }, 0); // const findItem = state.items.find((obj) => obj.id === action.payload.id);\n      // console.log(findItem);\n      // if (findItem) {\n      //   findItem.amount++;\n      // } else {\n      //   state.items.push({ ...action.payload, amount: 1 });\n      // }\n      // state.totalPrice = state.items.reduce((sum, obj) => {\n      //   return obj.price * obj.amount + sum;\n      // }, 0);\n      // state.totalAmount = state.items.reduce((sum, obj) => {\n      //   return obj.amount + sum;\n      // }, 0);\n\n      state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\n    },\n\n    // setBasketItemPlus(state, action) {\n    //   const findItemPlus = state.items.find((obj) => obj.id === action.payload);\n    //   findItemPlus.amount++;\n    //   console.log(action);\n    //   state.totalAmount = state.items.reduce((sum, obj) => {\n    //     return obj.amount + sum;\n    //   }, 0);\n    // },\n    setBasketItemMinus(state, action) {\n      const findItemMinus = state.items.find(obj => obj.id === action.payload);\n      findItemMinus.amount--;\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount - sum;\n      }, 0);\n    },\n\n    removeItems(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalAmount--;\n    }\n\n  }\n});\nexport const {\n  setBasketItemPlus,\n  setBasketItemMinus,\n  addItems,\n  removeItems\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_new_v4/react-course-app/src/redux/slices/basketSlice.js"],"names":["createSlice","initialState","totalPrice","totalAmount","items","basketSlice","name","reducers","addItems","state","action","push","payload","amount","reduce","sum","obj","console","log","price","setBasketItemMinus","findItemMinus","find","id","removeItems","filter","setBasketItemPlus","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AACJ;AACfC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AAEA,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;AACrCM,EAAAA,IAAI,EAAE,QAD+B;AAErCL,EAAAA,YAFqC;AAGrCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACL,KAAN,CAAYO,IAAZ,CAAiB,EAAE,GAAGD,MAAM,CAACE,OAAZ;AAAqBC,QAAAA,MAAM,EAAE;AAA7B,OAAjB;AACAJ,MAAAA,KAAK,CAACP,UAAN,GAAmBO,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClDC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACH,MAAJ,GAAaG,GAAG,CAACG,KAA7B;AACA,eAAOH,GAAG,CAACG,KAAJ,GAAYJ,GAAnB;AACD,OAHkB,EAGhB,CAHgB,CAAnB,CAFsB,CAMtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAN,MAAAA,KAAK,CAACN,WAAN,IAAqB,CAArB,CAnBsB,CAmBE;AACzB,KArBO;;AAuBR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAiB,IAAAA,kBAAkB,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMW,aAAa,GAAGZ,KAAK,CAACL,KAAN,CAAYkB,IAAZ,CACnBN,GAAD,IAASA,GAAG,CAACO,EAAJ,KAAWb,MAAM,CAACE,OADP,CAAtB;AAGAS,MAAAA,aAAa,CAACR,MAAd;AACAJ,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACL,KAAN,CAAYU,MAAZ,CAAmB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACnD,eAAOA,GAAG,CAACH,MAAJ,GAAaE,GAApB;AACD,OAFmB,EAEjB,CAFiB,CAApB;AAGD,KAvCO;;AAwCRS,IAAAA,WAAW,CAACf,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYqB,MAAZ,CAAoBT,GAAD,IAASA,GAAG,CAACO,EAAJ,KAAWb,MAAM,CAACE,OAA9C,CAAd;AACAH,MAAAA,KAAK,CAACN,WAAN;AACD;;AA3CO;AAH2B,CAAD,CAA/B;AAkDP,OAAO,MAAM;AAAEuB,EAAAA,iBAAF;AAAqBN,EAAAA,kBAArB;AAAyCZ,EAAAA,QAAzC;AAAmDgB,EAAAA;AAAnD,IACXnB,WAAW,CAACsB,OADP;AAGP,eAAetB,WAAW,CAACuB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0, ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\r\n  totalAmount: 0,\r\n  items: [],\r\n};\r\n\r\n//totalAmount = items;\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      state.items.push({ ...action.payload, amount: 1 });\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        console.log(obj.amount * obj.price);\r\n        return obj.price + sum;\r\n      }, 0);\r\n      // const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      // console.log(findItem);\r\n      // if (findItem) {\r\n      //   findItem.amount++;\r\n      // } else {\r\n      //   state.items.push({ ...action.payload, amount: 1 });\r\n      // }\r\n      // state.totalPrice = state.items.reduce((sum, obj) => {\r\n      //   return obj.price * obj.amount + sum;\r\n      // }, 0);\r\n      // state.totalAmount = state.items.reduce((sum, obj) => {\r\n      //   return obj.amount + sum;\r\n      // }, 0);\r\n      state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\r\n    },\r\n\r\n    // setBasketItemPlus(state, action) {\r\n    //   const findItemPlus = state.items.find((obj) => obj.id === action.payload);\r\n    //   findItemPlus.amount++;\r\n    //   console.log(action);\r\n    //   state.totalAmount = state.items.reduce((sum, obj) => {\r\n    //     return obj.amount + sum;\r\n    //   }, 0);\r\n    // },\r\n    setBasketItemMinus(state, action) {\r\n      const findItemMinus = state.items.find(\r\n        (obj) => obj.id === action.payload\r\n      );\r\n      findItemMinus.amount--;\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount - sum;\r\n      }, 0);\r\n    },\r\n    removeItems(state, action) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n      state.totalAmount--;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBasketItemPlus, setBasketItemMinus, addItems, removeItems } =\r\n  basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}