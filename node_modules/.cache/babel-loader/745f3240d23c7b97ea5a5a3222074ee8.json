{"ast":null,"code":"import _objectDestructuringEmpty from\"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectDestructuringEmpty.js\";import _defineProperty from\"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";import _asyncToGenerator from\"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import axios from\"axios\";export var fetchOrder=createAsyncThunk(\"/\",/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(order){var _yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"http://localhost:4444/\",order);case 2:_yield$axios$post=_context.sent;data=_yield$axios$post.data;return _context.abrupt(\"return\",data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());var initialState={posts:{items:[],status:\"loading\"}};console.log(initialState.posts.items);export var orderSlice=createSlice({name:\"order\",initialState:initialState,reducers:{},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchOrder.pending,function(state){state.posts.items=[];state.posts.status=\"loading\";}),_defineProperty(_extraReducers,fetchOrder.fulfilled,function(state,actions){state.posts.items=actions.payload;state.posts.status=\"loaded\";}),_defineProperty(_extraReducers,fetchOrder.error,function(state){state.posts.items=[];state.posts.status=\"\";}),_extraReducers)});_objectDestructuringEmpty(orderSlice.actions);export{};export default orderSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_update_23.08.2023/DimShashlik/src/redux/slices/orderSlice.js"],"names":["createSlice","createAsyncThunk","axios","fetchOrder","order","post","data","initialState","posts","items","status","console","log","orderSlice","name","reducers","extraReducers","pending","state","fulfilled","actions","payload","error","reducer"],"mappings":"6nBAAA,OAASA,WAAT,CAAsBC,gBAAtB,KAA8C,kBAA9C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAGF,gBAAgB,CAAC,GAAD,0FAAM,iBAAOG,KAAP,mKACvBF,CAAAA,KAAK,CAACG,IAAN,CAAW,wBAAX,CAAqCD,KAArC,CADuB,wCACtCE,IADsC,mBACtCA,IADsC,iCAEvCA,IAFuC,wDAAN,+DAAnC,CAKP,GAAMC,CAAAA,YAAY,CAAG,CACnBC,KAAK,CAAE,CACLC,KAAK,CAAE,EADF,CAELC,MAAM,CAAE,SAFH,CADY,CAArB,CAMAC,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACC,KAAb,CAAmBC,KAA/B,EACA,MAAO,IAAMI,CAAAA,UAAU,CAAGb,WAAW,CAAC,CACpCc,IAAI,CAAE,OAD8B,CAEpCP,YAAY,CAAZA,YAFoC,CAGpCQ,QAAQ,CAAE,EAH0B,CAIpCC,aAAa,mDACVb,UAAU,CAACc,OADD,CACW,SAACC,KAAD,CAAW,CAC/BA,KAAK,CAACV,KAAN,CAAYC,KAAZ,CAAoB,EAApB,CACAS,KAAK,CAACV,KAAN,CAAYE,MAAZ,CAAqB,SAArB,CACD,CAJU,iCAKVP,UAAU,CAACgB,SALD,CAKa,SAACD,KAAD,CAAQE,OAAR,CAAoB,CAC1CF,KAAK,CAACV,KAAN,CAAYC,KAAZ,CAAoBW,OAAO,CAACC,OAA5B,CACAH,KAAK,CAACV,KAAN,CAAYE,MAAZ,CAAqB,QAArB,CACD,CARU,iCASVP,UAAU,CAACmB,KATD,CASS,SAACJ,KAAD,CAAW,CAC7BA,KAAK,CAACV,KAAN,CAAYC,KAAZ,CAAoB,EAApB,CACAS,KAAK,CAACV,KAAN,CAAYE,MAAZ,CAAqB,EAArB,CACD,CAZU,iBAJuB,CAAD,CAA9B,CAoBA,0BAAWG,UAAU,CAACO,OAAtB,E,SAEP,cAAeP,CAAAA,UAAU,CAACU,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchOrder = createAsyncThunk(\"/\", async (order) => {\r\n  const { data } = await axios.post(\"http://localhost:4444/\", order);\r\n  return data;\r\n});\r\n\r\nconst initialState = {\r\n  posts: {\r\n    items: [],\r\n    status: \"loading\",\r\n  },\r\n};\r\nconsole.log(initialState.posts.items);\r\nexport const orderSlice = createSlice({\r\n  name: \"order\",\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [fetchOrder.pending]: (state) => {\r\n      state.posts.items = [];\r\n      state.posts.status = \"loading\";\r\n    },\r\n    [fetchOrder.fulfilled]: (state, actions) => {\r\n      state.posts.items = actions.payload;\r\n      state.posts.status = \"loaded\";\r\n    },\r\n    [fetchOrder.error]: (state) => {\r\n      state.posts.items = [];\r\n      state.posts.status = \"\";\r\n    },\r\n  },\r\n});\r\n\r\nexport const {} = orderSlice.actions;\r\n\r\nexport default orderSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}