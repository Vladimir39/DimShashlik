{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\n  totalAmount: 0,\n  items: []\n}; //totalAmount = items;\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.amount++;\n      } else {\n        state.items.push({ ...action.payload,\n          amount: 1\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount + sum;\n      }, 0);\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount + sum;\n      }, 0); // state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\n    },\n\n    setBasketItemPlus(state, action) {\n      const findItemPlus = state.items.find(obj => obj.id === action.payload); //console.log(state.totalAmount);\n\n      if (findItemPlus) {\n        findItemPlus.amount++;\n      } // state.totalAmount = state.items.reduce((sum, obj) => {\n      //   return obj.amount + sum;\n      // }, 0);\n\n    },\n\n    setBasketItemMinus(state, action) {\n      const findItemMinus = state.items.find(obj => obj.id === action.payload);\n\n      if (findItemMinus) {\n        state.totalAmount--;\n      } // findItemMinus.amount--;\n      // state.totalAmount = state.items.reduce((sum, obj) => {\n      //   return obj.amount - sum;\n      // }, 0);\n\n    },\n\n    removeItems(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalAmount--;\n    }\n\n  }\n});\nexport const {\n  setBasketItemPlus,\n  setBasketItemMinus,\n  addItems,\n  removeItems\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_new_v4/react-course-app/src/redux/slices/basketSlice.js"],"names":["createSlice","initialState","totalPrice","totalAmount","items","basketSlice","name","reducers","addItems","state","action","findItem","find","obj","id","payload","amount","push","reduce","sum","price","setBasketItemPlus","findItemPlus","setBasketItemMinus","findItemMinus","removeItems","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AACJ;AACfC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AAEA,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;AACrCM,EAAAA,IAAI,EAAE,QAD+B;AAErCL,EAAAA,YAFqC;AAGrCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,YAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAAP,CAAeD,EAApD,CAAjB;;AACA,UAAIH,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAACK,MAAT;AACD,OAFD,MAEO;AACLP,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB,EAAE,GAAGP,MAAM,CAACK,OAAZ;AAAqBC,UAAAA,MAAM,EAAE;AAA7B,SAAjB;AACD;;AACDP,MAAAA,KAAK,CAACP,UAAN,GAAmBO,KAAK,CAACL,KAAN,CAAYc,MAAZ,CAAmB,CAACC,GAAD,EAAMN,GAAN,KAAc;AAClD,eAAOA,GAAG,CAACO,KAAJ,GAAYP,GAAG,CAACG,MAAhB,GAAyBG,GAAhC;AACD,OAFkB,EAEhB,CAFgB,CAAnB;AAGAV,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACL,KAAN,CAAYc,MAAZ,CAAmB,CAACC,GAAD,EAAMN,GAAN,KAAc;AACnD,eAAOA,GAAG,CAACG,MAAJ,GAAaG,GAApB;AACD,OAFmB,EAEjB,CAFiB,CAApB,CAVsB,CAatB;AACD,KAfO;;AAiBRE,IAAAA,iBAAiB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AAC/B,YAAMY,YAAY,GAAGb,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA5C,CAArB,CAD+B,CAE/B;;AACA,UAAIO,YAAJ,EAAkB;AAChBA,QAAAA,YAAY,CAACN,MAAb;AACD,OAL8B,CAM/B;AACA;AACA;;AACD,KA1BO;;AA2BRO,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMc,aAAa,GAAGf,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CACnBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OADP,CAAtB;;AAGA,UAAIS,aAAJ,EAAmB;AACjBf,QAAAA,KAAK,CAACN,WAAN;AACD,OAN+B,CAOhC;AACA;AACA;AACA;;AACD,KAtCO;;AAuCRsB,IAAAA,WAAW,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAoBb,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA9C,CAAd;AACAN,MAAAA,KAAK,CAACN,WAAN;AACD;;AA1CO;AAH2B,CAAD,CAA/B;AAiDP,OAAO,MAAM;AAAEkB,EAAAA,iBAAF;AAAqBE,EAAAA,kBAArB;AAAyCf,EAAAA,QAAzC;AAAmDiB,EAAAA;AAAnD,IACXpB,WAAW,CAACsB,OADP;AAGP,eAAetB,WAAW,CAACuB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0, ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\r\n  totalAmount: 0,\r\n  items: [],\r\n};\r\n\r\n//totalAmount = items;\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.amount++;\r\n      } else {\r\n        state.items.push({ ...action.payload, amount: 1 });\r\n      }\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount + sum;\r\n      }, 0);\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount + sum;\r\n      }, 0);\r\n      // state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\r\n    },\r\n\r\n    setBasketItemPlus(state, action) {\r\n      const findItemPlus = state.items.find((obj) => obj.id === action.payload);\r\n      //console.log(state.totalAmount);\r\n      if (findItemPlus) {\r\n        findItemPlus.amount++;\r\n      }\r\n      // state.totalAmount = state.items.reduce((sum, obj) => {\r\n      //   return obj.amount + sum;\r\n      // }, 0);\r\n    },\r\n    setBasketItemMinus(state, action) {\r\n      const findItemMinus = state.items.find(\r\n        (obj) => obj.id === action.payload\r\n      );\r\n      if (findItemMinus) {\r\n        state.totalAmount--;\r\n      }\r\n      // findItemMinus.amount--;\r\n      // state.totalAmount = state.items.reduce((sum, obj) => {\r\n      //   return obj.amount - sum;\r\n      // }, 0);\r\n    },\r\n    removeItems(state, action) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n      state.totalAmount--;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBasketItemPlus, setBasketItemMinus, addItems, removeItems } =\r\n  basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}