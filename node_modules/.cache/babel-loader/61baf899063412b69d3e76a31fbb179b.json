{"ast":null,"code":"'use strict';\n\nimport _classCallCheck from \"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\classCallCheck.js\";\nimport _createClass from \"D:\\\\JS-React\\\\dimshishlik_update_23.08.2023\\\\DimShashlik\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createClass.js\";\nimport CanceledError from './CanceledError.js';\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @param {Function} executor The executor function.\r\n *\r\n * @returns {CancelToken}\r\n */\n\nvar CancelToken = /*#__PURE__*/function () {\n  function CancelToken(executor) {\n    _classCallCheck(this, CancelToken);\n\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    var resolvePromise;\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n    var token = this; // eslint-disable-next-line func-names\n\n    this.promise.then(function (cancel) {\n      if (!token._listeners) return;\n      var i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n\n      token._listeners = null;\n    }); // eslint-disable-next-line func-names\n\n    this.promise.then = function (onfulfilled) {\n      var _resolve; // eslint-disable-next-line func-names\n\n\n      var promise = new Promise(function (resolve) {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n  /**\r\n   * Throws a `CanceledError` if cancellation has been requested.\r\n   */\n\n\n  _createClass(CancelToken, [{\n    key: \"throwIfRequested\",\n    value: function throwIfRequested() {\n      if (this.reason) {\n        throw this.reason;\n      }\n    }\n    /**\r\n     * Subscribe to the cancel signal\r\n     */\n\n  }, {\n    key: \"subscribe\",\n    value: function subscribe(listener) {\n      if (this.reason) {\n        listener(this.reason);\n        return;\n      }\n\n      if (this._listeners) {\n        this._listeners.push(listener);\n      } else {\n        this._listeners = [listener];\n      }\n    }\n    /**\r\n     * Unsubscribe from the cancel signal\r\n     */\n\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe(listener) {\n      if (!this._listeners) {\n        return;\n      }\n\n      var index = this._listeners.indexOf(listener);\n\n      if (index !== -1) {\n        this._listeners.splice(index, 1);\n      }\n    }\n    /**\r\n     * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n     * cancels the `CancelToken`.\r\n     */\n\n  }], [{\n    key: \"source\",\n    value: function source() {\n      var cancel;\n      var token = new CancelToken(function executor(c) {\n        cancel = c;\n      });\n      return {\n        token: token,\n        cancel: cancel\n      };\n    }\n  }]);\n\n  return CancelToken;\n}();\n\nexport default CancelToken;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_update_23.08.2023/DimShashlik/node_modules/axios/lib/cancel/CancelToken.js"],"names":["CanceledError","CancelToken","executor","TypeError","resolvePromise","promise","Promise","promiseExecutor","resolve","token","then","cancel","_listeners","i","length","onfulfilled","_resolve","subscribe","reject","unsubscribe","message","config","request","reason","listener","push","index","indexOf","splice","c"],"mappings":"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","sourcesContent":["'use strict';\r\n\r\nimport CanceledError from './CanceledError.js';\r\n\r\n/**\r\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\r\n *\r\n * @param {Function} executor The executor function.\r\n *\r\n * @returns {CancelToken}\r\n */\r\nclass CancelToken {\r\n  constructor(executor) {\r\n    if (typeof executor !== 'function') {\r\n      throw new TypeError('executor must be a function.');\r\n    }\r\n\r\n    let resolvePromise;\r\n\r\n    this.promise = new Promise(function promiseExecutor(resolve) {\r\n      resolvePromise = resolve;\r\n    });\r\n\r\n    const token = this;\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then(cancel => {\r\n      if (!token._listeners) return;\r\n\r\n      let i = token._listeners.length;\r\n\r\n      while (i-- > 0) {\r\n        token._listeners[i](cancel);\r\n      }\r\n      token._listeners = null;\r\n    });\r\n\r\n    // eslint-disable-next-line func-names\r\n    this.promise.then = onfulfilled => {\r\n      let _resolve;\r\n      // eslint-disable-next-line func-names\r\n      const promise = new Promise(resolve => {\r\n        token.subscribe(resolve);\r\n        _resolve = resolve;\r\n      }).then(onfulfilled);\r\n\r\n      promise.cancel = function reject() {\r\n        token.unsubscribe(_resolve);\r\n      };\r\n\r\n      return promise;\r\n    };\r\n\r\n    executor(function cancel(message, config, request) {\r\n      if (token.reason) {\r\n        // Cancellation has already been requested\r\n        return;\r\n      }\r\n\r\n      token.reason = new CanceledError(message, config, request);\r\n      resolvePromise(token.reason);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Throws a `CanceledError` if cancellation has been requested.\r\n   */\r\n  throwIfRequested() {\r\n    if (this.reason) {\r\n      throw this.reason;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Subscribe to the cancel signal\r\n   */\r\n\r\n  subscribe(listener) {\r\n    if (this.reason) {\r\n      listener(this.reason);\r\n      return;\r\n    }\r\n\r\n    if (this._listeners) {\r\n      this._listeners.push(listener);\r\n    } else {\r\n      this._listeners = [listener];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe from the cancel signal\r\n   */\r\n\r\n  unsubscribe(listener) {\r\n    if (!this._listeners) {\r\n      return;\r\n    }\r\n    const index = this._listeners.indexOf(listener);\r\n    if (index !== -1) {\r\n      this._listeners.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\r\n   * cancels the `CancelToken`.\r\n   */\r\n  static source() {\r\n    let cancel;\r\n    const token = new CancelToken(function executor(c) {\r\n      cancel = c;\r\n    });\r\n    return {\r\n      token,\r\n      cancel\r\n    };\r\n  }\r\n}\r\n\r\nexport default CancelToken;\r\n"]},"metadata":{},"sourceType":"module"}