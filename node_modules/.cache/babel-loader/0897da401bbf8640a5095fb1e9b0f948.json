{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  totalAmount: 0,\n  isValidButton: false,\n  items: []\n};\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.amount++;\n      } else {\n        state.items.push({ ...action.payload,\n          amount: 1\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount + sum;\n      }, 0);\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount + sum;\n      }, 0);\n    },\n\n    setBasketItemPlus(state, action) {\n      const findItemPlus = state.items.find(obj => obj.id === action.payload);\n\n      if (findItemPlus) {\n        state.totalAmount++;\n        findItemPlus.amount++;\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount + sum;\n      }, 0);\n    },\n\n    setBasketItemMinus(state, action) {\n      const findItemMinus = state.items.find(obj => obj.id === action.payload);\n      console.log(findItemMinus);\n\n      if (findItemMinus) {\n        state.totalAmount--;\n        findItemMinus.amount--;\n        console.log(findItemMinus);\n      }\n    },\n\n    removeItems(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount - sum;\n      }, 0);\n    },\n\n    IsAmountValid(state, action) {\n      const IsAmountValidPer = state.isValidButton;\n\n      if (IsAmountValidPer) {\n        return state.isValidButton = true;\n      }\n    }\n\n  }\n});\nexport const {\n  setBasketItemPlus,\n  setBasketItemMinus,\n  addItems,\n  removeItems\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_new_v4/react-course-app/src/redux/slices/basketSlice.js"],"names":["createSlice","initialState","totalPrice","totalAmount","isValidButton","items","basketSlice","name","reducers","addItems","state","action","findItem","find","obj","id","payload","amount","push","reduce","sum","price","setBasketItemPlus","findItemPlus","setBasketItemMinus","findItemMinus","console","log","removeItems","filter","IsAmountValid","IsAmountValidPer","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0,\r\n  totalAmount: 0,\r\n  isValidButton: false,\r\n  items: [],\r\n};\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.amount++;\r\n      } else {\r\n        state.items.push({ ...action.payload, amount: 1 });\r\n      }\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount + sum;\r\n      }, 0);\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount + sum;\r\n      }, 0);\r\n    },\r\n\r\n    setBasketItemPlus(state, action) {\r\n      const findItemPlus = state.items.find((obj) => obj.id === action.payload);\r\n      if (findItemPlus) {\r\n        state.totalAmount++;\r\n        findItemPlus.amount++;\r\n      }\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount + sum;\r\n      }, 0);\r\n    },\r\n    setBasketItemMinus(state, action) {\r\n      const findItemMinus = state.items.find(\r\n        (obj) => obj.id === action.payload\r\n      );\r\n      console.log(findItemMinus);\r\n      if (findItemMinus) {\r\n        state.totalAmount--;\r\n        findItemMinus.amount--;\r\n        console.log(findItemMinus);\r\n      }\r\n    },\r\n    removeItems(state, action) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount - sum;\r\n      }, 0);\r\n    },\r\n    IsAmountValid(state, action) {\r\n      const IsAmountValidPer = state.isValidButton;\r\n      if (IsAmountValidPer) {\r\n        return (state.isValidButton = true);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBasketItemPlus, setBasketItemMinus, addItems, removeItems } =\r\n  basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}