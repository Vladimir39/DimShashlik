{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\n  totalAmount: 0,\n  items: []\n}; //totalAmount = items;\n\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      // state.items.push({ ...action.payload, amount: 1 });\n      // state.totalPrice = state.items.reduce((sum, obj) => {\n      //   console.log(obj.amount * obj.price);\n      //   return obj.price + sum;\n      // }, 0);\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n      console.log(findItem); // state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\n    },\n\n    setBasketItemPlus(state, action) {\n      const findItemPlus = state.items.find(obj => obj.id === action.payload);\n      findItemPlus.amount++;\n      console.log(action);\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount + sum;\n      }, 0);\n    },\n\n    setBasketItemMinus(state, action) {\n      const findItemMinus = state.items.find(obj => obj.id === action.payload);\n      findItemMinus.amount--;\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount - sum;\n      }, 0);\n    },\n\n    removeItems(state, action) {\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n      state.totalAmount--;\n    }\n\n  }\n});\nexport const {\n  setBasketItemPlus,\n  setBasketItemMinus,\n  addItems,\n  removeItems\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_new_v4/react-course-app/src/redux/slices/basketSlice.js"],"names":["createSlice","initialState","totalPrice","totalAmount","items","basketSlice","name","reducers","addItems","state","action","findItem","find","obj","id","payload","console","log","setBasketItemPlus","findItemPlus","amount","reduce","sum","setBasketItemMinus","findItemMinus","removeItems","filter","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CADO;AACJ;AACfC,EAAAA,WAAW,EAAE,CAFM;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB,C,CAMA;;AAEA,OAAO,MAAMC,WAAW,GAAGL,WAAW,CAAC;AACrCM,EAAAA,IAAI,EAAE,QAD+B;AAErCL,EAAAA,YAFqC;AAGrCM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB;AACA;AACA;AACA;AACA;AACA,YAAMC,QAAQ,GAAGF,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAAP,CAAeD,EAApD,CAAjB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAPsB,CAStB;AACD,KAXO;;AAaRO,IAAAA,iBAAiB,CAACT,KAAD,EAAQC,MAAR,EAAgB;AAC/B,YAAMS,YAAY,GAAGV,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CAAkBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA5C,CAArB;AACAI,MAAAA,YAAY,CAACC,MAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACAD,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACL,KAAN,CAAYiB,MAAZ,CAAmB,CAACC,GAAD,EAAMT,GAAN,KAAc;AACnD,eAAOA,GAAG,CAACO,MAAJ,GAAaE,GAApB;AACD,OAFmB,EAEjB,CAFiB,CAApB;AAGD,KApBO;;AAqBRC,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAChC,YAAMc,aAAa,GAAGf,KAAK,CAACL,KAAN,CAAYQ,IAAZ,CACnBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OADP,CAAtB;AAGAS,MAAAA,aAAa,CAACJ,MAAd;AACAX,MAAAA,KAAK,CAACN,WAAN,GAAoBM,KAAK,CAACL,KAAN,CAAYiB,MAAZ,CAAmB,CAACC,GAAD,EAAMT,GAAN,KAAc;AACnD,eAAOA,GAAG,CAACO,MAAJ,GAAaE,GAApB;AACD,OAFmB,EAEjB,CAFiB,CAApB;AAGD,KA7BO;;AA8BRG,IAAAA,WAAW,CAAChB,KAAD,EAAQC,MAAR,EAAgB;AACzBD,MAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYsB,MAAZ,CAAoBb,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWJ,MAAM,CAACK,OAA9C,CAAd;AACAN,MAAAA,KAAK,CAACN,WAAN;AACD;;AAjCO;AAH2B,CAAD,CAA/B;AAwCP,OAAO,MAAM;AAAEe,EAAAA,iBAAF;AAAqBK,EAAAA,kBAArB;AAAyCf,EAAAA,QAAzC;AAAmDiB,EAAAA;AAAnD,IACXpB,WAAW,CAACsB,OADP;AAGP,eAAetB,WAAW,CAACuB,OAA3B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0, ///////////////////////////////////Цену ИСПРАВИТ ////////////////////////////////////////////////////\r\n  totalAmount: 0,\r\n  items: [],\r\n};\r\n\r\n//totalAmount = items;\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      // state.items.push({ ...action.payload, amount: 1 });\r\n      // state.totalPrice = state.items.reduce((sum, obj) => {\r\n      //   console.log(obj.amount * obj.price);\r\n      //   return obj.price + sum;\r\n      // }, 0);\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      console.log(findItem);\r\n\r\n      // state.totalAmount += 1; ///////////////////////////////////////////////////////Исправить/////////////////////////////////////\r\n    },\r\n\r\n    setBasketItemPlus(state, action) {\r\n      const findItemPlus = state.items.find((obj) => obj.id === action.payload);\r\n      findItemPlus.amount++;\r\n      console.log(action);\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount + sum;\r\n      }, 0);\r\n    },\r\n    setBasketItemMinus(state, action) {\r\n      const findItemMinus = state.items.find(\r\n        (obj) => obj.id === action.payload\r\n      );\r\n      findItemMinus.amount--;\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount - sum;\r\n      }, 0);\r\n    },\r\n    removeItems(state, action) {\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n      state.totalAmount--;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBasketItemPlus, setBasketItemMinus, addItems, removeItems } =\r\n  basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}