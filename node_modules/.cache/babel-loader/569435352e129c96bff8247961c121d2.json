{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  totalPrice: 0,\n  totalAmount: 0,\n  items: [],\n  delivery: {},\n  time: \"\"\n};\nexport const basketSlice = createSlice({\n  name: \"basket\",\n  initialState,\n  reducers: {\n    addItems(state, action) {\n      const findItem = state.items.find(obj => obj.id === action.payload.id);\n\n      if (findItem) {\n        findItem.amount++;\n      } else {\n        state.items.push({ ...action.payload,\n          amount: 1\n        });\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount + sum;\n      }, 0);\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        return obj.amount + sum;\n      }, 0);\n    },\n\n    addDelivery(state, action) {\n      state.delivery = action.payload;\n    },\n\n    addDeliveryTime(state, action) {\n      state.time = action.payload;\n    },\n\n    setBasketItemPlus(state, action) {\n      const findItemPlus = state.items.find(obj => obj.id === action.payload);\n\n      if (findItemPlus) {\n        state.totalAmount++;\n        findItemPlus.amount++;\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        return obj.price * obj.amount + sum;\n      }, 0);\n    },\n\n    setBasketItemMinus(state, action) {\n      const findItemMinus = state.items.find(obj => obj.id === action.payload);\n\n      if (findItemMinus) {\n        state.totalAmount--;\n        findItemMinus.amount--;\n      }\n\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        if (obj.id === action.payload) {\n          return sum - obj.price;\n        } else {\n          return sum;\n        }\n      }, state.totalPrice);\n    },\n\n    removeItems(state, action) {\n      state.totalAmount = state.items.reduce((sum, obj) => {\n        if (obj.id === action.payload) {\n          return sum - obj.amount;\n        } else {\n          return sum;\n        }\n      }, state.totalAmount);\n      state.totalPrice = state.items.reduce((sum, obj) => {\n        if (obj.id === action.payload) {\n          return sum - obj.price * obj.amount;\n        } else {\n          return sum;\n        }\n      }, state.totalPrice);\n      state.items = state.items.filter(obj => obj.id !== action.payload);\n    }\n\n  }\n});\nexport const {\n  setBasketItemPlus,\n  setBasketItemMinus,\n  addItems,\n  removeItems,\n  addDelivery,\n  addDeliveryTime\n} = basketSlice.actions;\nexport default basketSlice.reducer;","map":{"version":3,"sources":["D:/JS-React/dimshishlik_update_23.08.2023/DimShashlik/src/redux/slices/basketSlice.js"],"names":["createSlice","initialState","totalPrice","totalAmount","items","delivery","time","basketSlice","name","reducers","addItems","state","action","findItem","find","obj","id","payload","amount","push","reduce","sum","price","addDelivery","addDeliveryTime","setBasketItemPlus","findItemPlus","setBasketItemMinus","findItemMinus","removeItems","filter","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  totalPrice: 0,\r\n  totalAmount: 0,\r\n  items: [],\r\n  delivery: {},\r\n  time: \"\",\r\n};\r\n\r\nexport const basketSlice = createSlice({\r\n  name: \"basket\",\r\n  initialState,\r\n  reducers: {\r\n    addItems(state, action) {\r\n      const findItem = state.items.find((obj) => obj.id === action.payload.id);\r\n      if (findItem) {\r\n        findItem.amount++;\r\n      } else {\r\n        state.items.push({ ...action.payload, amount: 1 });\r\n      }\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount + sum;\r\n      }, 0);\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        return obj.amount + sum;\r\n      }, 0);\r\n    },\r\n\r\n    addDelivery(state, action) {\r\n      state.delivery = action.payload;\r\n    },\r\n\r\n    addDeliveryTime(state, action) {\r\n      state.time = action.payload;\r\n    },\r\n\r\n    setBasketItemPlus(state, action) {\r\n      const findItemPlus = state.items.find((obj) => obj.id === action.payload);\r\n      if (findItemPlus) {\r\n        state.totalAmount++;\r\n        findItemPlus.amount++;\r\n      }\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        return obj.price * obj.amount + sum;\r\n      }, 0);\r\n    },\r\n    setBasketItemMinus(state, action) {\r\n      const findItemMinus = state.items.find(\r\n        (obj) => obj.id === action.payload\r\n      );\r\n      if (findItemMinus) {\r\n        state.totalAmount--;\r\n        findItemMinus.amount--;\r\n      }\r\n\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        if (obj.id === action.payload) {\r\n          return sum - obj.price;\r\n        } else {\r\n          return sum;\r\n        }\r\n      }, state.totalPrice);\r\n    },\r\n    removeItems(state, action) {\r\n      state.totalAmount = state.items.reduce((sum, obj) => {\r\n        if (obj.id === action.payload) {\r\n          return sum - obj.amount;\r\n        } else {\r\n          return sum;\r\n        }\r\n      }, state.totalAmount);\r\n      state.totalPrice = state.items.reduce((sum, obj) => {\r\n        if (obj.id === action.payload) {\r\n          return sum - obj.price * obj.amount;\r\n        } else {\r\n          return sum;\r\n        }\r\n      }, state.totalPrice);\r\n      state.items = state.items.filter((obj) => obj.id !== action.payload);\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setBasketItemPlus,\r\n  setBasketItemMinus,\r\n  addItems,\r\n  removeItems,\r\n  addDelivery,\r\n  addDeliveryTime,\r\n} = basketSlice.actions;\r\n\r\nexport default basketSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}